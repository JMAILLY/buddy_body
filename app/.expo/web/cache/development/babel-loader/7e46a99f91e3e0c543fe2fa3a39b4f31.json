{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useAuth = useAuth;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _axios = _interopRequireDefault(require(\"axios\"));\n\nvar _reactNativeSecureStorage = _interopRequireDefault(require(\"react-native-secure-storage\"));\n\nvar _config = require(\"../config\");\n\nvar _createAction = require(\"../utils/createAction\");\n\nvar _sleep = require(\"../utils/sleep\");\n\nfunction useAuth() {\n  var _React$useReducer = _react.default.useReducer(function (state, action) {\n    switch (action.type) {\n      case 'SET_USER':\n        return (0, _extends2.default)({}, state, {\n          user: (0, _extends2.default)({}, action.payload)\n        });\n\n      case 'REMOVE_USER':\n        return (0, _extends2.default)({}, state, {\n          user: undefined\n        });\n\n      case 'SET_LOADING':\n        return (0, _extends2.default)({}, state, {\n          loading: action.payload\n        });\n\n      default:\n        return state;\n    }\n  }, {\n    user: undefined,\n    loading: true\n  }),\n      _React$useReducer2 = (0, _slicedToArray2.default)(_React$useReducer, 2),\n      state = _React$useReducer2[0],\n      dispatch = _React$useReducer2[1];\n\n  var auth = _react.default.useMemo(function () {\n    return {\n      login: function login(email, password) {\n        var _await$axios$post, data, user;\n\n        return _regenerator.default.async(function login$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _regenerator.default.awrap(_axios.default.post(_config.BASE_URL + \"/auth/local\", {\n                  identifier: email,\n                  password: password\n                }));\n\n              case 2:\n                _await$axios$post = _context.sent;\n                data = _await$axios$post.data;\n                user = {\n                  email: data.user.email,\n                  token: data.jwt\n                };\n                _context.next = 7;\n                return _regenerator.default.awrap(_reactNativeSecureStorage.default.setItem('user', JSON.stringify(user)));\n\n              case 7:\n                dispatch((0, _createAction.createAction)('SET_USER', user));\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      },\n      logout: function logout() {\n        return _regenerator.default.async(function logout$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return _regenerator.default.awrap(_reactNativeSecureStorage.default.removeItem('user'));\n\n              case 2:\n                dispatch((0, _createAction.createAction)('REMOVE_USER'));\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      },\n      register: function register(email, password) {\n        return _regenerator.default.async(function register$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return _regenerator.default.awrap((0, _sleep.sleep)(2000));\n\n              case 2:\n                _context3.next = 4;\n                return _regenerator.default.awrap(_axios.default.post(_config.BASE_URL + \"/auth/local/register\", {\n                  username: email,\n                  email: email,\n                  password: password\n                }));\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      }\n    };\n  }, []);\n\n  _react.default.useEffect(function () {\n    (0, _sleep.sleep)(2000).then(function () {\n      _reactNativeSecureStorage.default.getItem('user').then(function (user) {\n        if (user) {\n          dispatch((0, _createAction.createAction)('SET_USER', JSON.parse(user)));\n        }\n\n        dispatch((0, _createAction.createAction)('SET_LOADING', false));\n      });\n    });\n  }, []);\n\n  return {\n    auth: auth,\n    state: state\n  };\n}","map":{"version":3,"sources":["E:/ecv/buddy_body/app/hooks/useAuth.js"],"names":["useAuth","React","useReducer","state","action","type","user","payload","undefined","loading","dispatch","auth","useMemo","login","email","password","axios","post","BASE_URL","identifier","data","token","jwt","SecureStorage","setItem","JSON","stringify","logout","removeItem","register","username","useEffect","then","getItem","parse"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport SecureStorage from 'react-native-secure-storage';\n\nimport {BASE_URL} from '../config';\nimport {createAction} from '../utils/createAction';\nimport {sleep} from '../utils/sleep';\n\nexport function useAuth() {\n  const [state, dispatch] = React.useReducer(\n    (state, action) => {\n      switch (action.type) {\n        case 'SET_USER':\n          return {\n            ...state,\n            user: {...action.payload},\n          };\n        case 'REMOVE_USER':\n          return {\n            ...state,\n            user: undefined,\n          };\n        case 'SET_LOADING':\n          return {\n            ...state,\n            loading: action.payload,\n          };\n        default:\n          return state;\n      }\n    },\n    {\n      user: undefined,\n      loading: true,\n    },\n  );\n  const auth = React.useMemo(\n    () => ({\n      login: async (email, password) => {\n        const {data} = await axios.post(`${BASE_URL}/auth/local`, {\n          identifier: email,\n          password,\n        });\n        const user = {\n          email: data.user.email,\n          token: data.jwt,\n        };\n        await SecureStorage.setItem('user', JSON.stringify(user));\n        dispatch(createAction('SET_USER', user));\n      },\n      logout: async () => {\n        await SecureStorage.removeItem('user');\n        dispatch(createAction('REMOVE_USER'));\n      },\n      register: async (email, password) => {\n        await sleep(2000);\n        await axios.post(`${BASE_URL}/auth/local/register`, {\n          username: email,\n          email,\n          password,\n        });\n      },\n    }),\n    [],\n  );\n  React.useEffect(() => {\n    sleep(2000).then(() => {\n      SecureStorage.getItem('user').then(user => {\n        if (user) {\n          dispatch(createAction('SET_USER', JSON.parse(user)));\n        }\n        dispatch(createAction('SET_LOADING', false));\n      });\n    });\n  }, []);\n  return {auth, state};\n}\n"]},"metadata":{},"sourceType":"script"}