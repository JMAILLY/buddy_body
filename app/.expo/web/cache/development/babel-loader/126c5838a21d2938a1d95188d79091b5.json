{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _Button = _interopRequireDefault(require(\"react-native-web/dist/exports/Button\"));\n\nvar _StyleSheet = _interopRequireDefault(require(\"react-native-web/dist/exports/StyleSheet\"));\n\nvar _View = _interopRequireDefault(require(\"react-native-web/dist/exports/View\"));\n\nvar _config = _interopRequireDefault(require(\"./config\"));\n\nvar _native = require(\"@react-navigation/native\");\n\nvar _stack = require(\"@react-navigation/stack\");\n\nvar _AuthStackNavigator = require(\"./navigators/AuthStackNavigator\");\n\nvar _AuthContext = require(\"./contexts/AuthContext\");\n\nvar _MainStackNavigator = require(\"./navigators/MainStackNavigator\");\n\nvar _UserContext = require(\"./contexts/UserContext\");\n\nvar _jsxFileName = \"E:\\\\ecv\\\\buddy_body\\\\app\\\\App.js\";\n\nfunction App() {\n  var _useState = (0, _react.useState)([]),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      users = _useState2[0],\n      setUsers = _useState2[1];\n\n  var RootStack = (0, _stack.createStackNavigator)();\n  (0, _react.useEffect)(function () {\n    fetch(_config.default.API_URL + '/users/log').then(function (response) {\n      return response.json();\n    }).then(function (users) {\n      return setUsers(users);\n    });\n  }, []);\n\n  function renderScreens() {\n    var _this = this;\n\n    return !users ? _react.default.createElement(RootStack.Screen, {\n      name: 'MainStack',\n      __self: this,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }, function () {\n      return _react.default.createElement(_UserContext.UserContext.Provider, {\n        value: users[0],\n        __self: _this,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }\n      }, _react.default.createElement(_MainStackNavigator.MainStackNavigator, {\n        __self: _this,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }\n      }));\n    }) : _react.default.createElement(RootStack.Screen, {\n      name: 'AuthStack',\n      component: _AuthStackNavigator.AuthStackNavigator,\n      __self: this,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    });\n  }\n\n  return _react.default.createElement(_AuthContext.AuthContext.Provider, {\n    __self: this,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_native.NavigationContainer, {\n    __self: this,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, _react.default.createElement(RootStack.Navigator, {\n    screenOptions: {\n      headerShown: false,\n      animationEnabled: false\n    },\n    __self: this,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }, renderScreens())));\n  {}\n  {}\n  {}\n  {}\n  {}\n  {}\n  {}\n  {}\n  {}\n  {}\n  {}\n  {}\n  {}\n  {}\n  {}\n}\n\nvar styles = _StyleSheet.default.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\n\nvar _default = App;\nexports.default = _default;","map":{"version":3,"sources":["E:/ecv/buddy_body/app/App.js"],"names":["App","users","setUsers","RootStack","fetch","config","API_URL","then","response","json","renderScreens","AuthStackNavigator","headerShown","animationEnabled","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent"],"mappings":";;;;;;;;;;;AAAA;;;;;;;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;;;AAIA,SAASA,GAAT,GAAe;AAAA,kBAEe,qBAAS,EAAT,CAFf;AAAA;AAAA,MAEJC,KAFI;AAAA,MAEGC,QAFH;;AAGX,MAAMC,SAAS,GAAG,kCAAlB;AAEA,wBAAU,YAAM;AAEZC,IAAAA,KAAK,CAACC,gBAAOC,OAAP,GAAiB,YAAlB,CAAL,CACKC,IADL,CACU,UAACC,QAAD;AAAA,aAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,KADV,EAEKF,IAFL,CAEU,UAACN,KAAD;AAAA,aAAWC,QAAQ,CAACD,KAAD,CAAnB;AAAA,KAFV;AAGH,GALD,EAKG,EALH;;AAOA,WAASS,aAAT,GAAyB;AAAA;;AAErB,WAAO,CAACT,KAAD,GACH,6BAAC,SAAD,CAAW,MAAX;AAAkB,MAAA,IAAI,EAAE,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK;AAAA,aACG,6BAAC,wBAAD,CAAa,QAAb;AAAsB,QAAA,KAAK,EAAEA,KAAK,CAAC,CAAD,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,6BAAC,sCAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADH;AAAA,KADL,CADG,GASH,6BAAC,SAAD,CAAW,MAAX;AAAkB,MAAA,IAAI,EAAE,WAAxB;AAAqC,MAAA,SAAS,EAAEU,sCAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ;AAWH;;AAED,SACQ,6BAAC,wBAAD,CAAa,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,6BAAC,2BAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,6BAAC,SAAD,CAAW,SAAX;AACI,IAAA,aAAa,EAAE;AACXC,MAAAA,WAAW,EAAE,KADF;AAEXC,MAAAA,gBAAgB,EAAE;AAFP,KADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKKH,aAAa,EALlB,CADJ,CADJ,CADR;AAgBQ,GAAU;AACV,GAA4B;AAC5B,GAAgC;AAChC,GAAkC;AAClC,GAAiC;AACjC,GAA8B;AAC9B,GAAmB;AACnB,GAAY;AACZ,GAAW;AACX,GAA2B;AAC3B,GAA2B;AAC3B,GAA2D;AAC3D,GAA6D;AAC7D,GAA4B;AAC5B,GAA4B;AAGvC;;AAED,IAAMI,MAAM,GAAGC,oBAAWC,MAAX,CAAkB;AAC7BC,EAAAA,SAAS,EAAE;AACPC,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,eAAe,EAAE,MAFV;AAGPC,IAAAA,UAAU,EAAE,QAHL;AAIPC,IAAAA,cAAc,EAAE;AAJT;AADkB,CAAlB,CAAf;;eASerB,G","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {Button, StyleSheet, View} from 'react-native';\nimport config from './config';\nimport {NavigationContainer} from '@react-navigation/native';\nimport {createStackNavigator} from '@react-navigation/stack';\nimport {AuthStackNavigator} from './navigators/AuthStackNavigator';\nimport {AuthContext} from './contexts/AuthContext';\nimport {MainStackNavigator} from './navigators/MainStackNavigator';\n// import {useAuth} from './hooks/useAuth';\nimport {UserContext} from './contexts/UserContext';\n// import {SplashScreen} from './screens/SplashScreen';\n// import {ThemeContext} from './contexts/ThemeContext';\n\nfunction App() {\n\n    const [users, setUsers] = useState([]);\n    const RootStack = createStackNavigator();\n\n    useEffect(() => {\n        //fetch test users form expressjs\n        fetch(config.API_URL + '/users/log')\n            .then((response) => response.json())\n            .then((users) => setUsers(users))\n    }, []);\n\n    function renderScreens() {\n\n        return !users ? (\n            <RootStack.Screen name={'MainStack'}>\n                {() => (\n                    <UserContext.Provider value={users[0]}>\n                        <MainStackNavigator />\n                    </UserContext.Provider>\n                )}\n            </RootStack.Screen>\n        ) : (\n            <RootStack.Screen name={'AuthStack'} component={AuthStackNavigator} />\n        );\n    }\n\n    return (\n            <AuthContext.Provider>\n                <NavigationContainer>\n                    <RootStack.Navigator\n                        screenOptions={{\n                            headerShown: false,\n                            animationEnabled: false,\n                        }}>\n                        {renderScreens()}\n                    </RootStack.Navigator>\n                </NavigationContainer>\n            </AuthContext.Provider>\n    );\n\n    // return (\n    //     <View style={styles.container}>\n            {/*<ul>*/}\n            {/*    {users.map(user =>*/}\n            {/*        <li key={user.id}>*/}\n            {/*            {user.firstname}*/}\n            {/*            {user.lastname}*/}\n            {/*            {user.email}*/}\n            {/*        </li>*/}\n            {/*    )}*/}\n            {/*</ul>*/}\n            {/*<NavigationContainer>*/}\n            {/*    <Stack.Navigator>*/}\n            {/*        <Stack.Screen name=\"Home\" component={Home} />*/}\n            {/*        <Stack.Screen name=\"Login\" component={Login} />*/}\n            {/*    </Stack.Navigator>*/}\n            {/*</NavigationContainer>*/}\n    //     </View>\n    // );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#fff',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n});\n\nexport default App"]},"metadata":{},"sourceType":"script"}